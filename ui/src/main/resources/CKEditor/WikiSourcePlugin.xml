<?xml version="1.0" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.1">
  <web>CKEditor</web>
  <name>WikiSourcePlugin</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <creationDate>1423738166000</creationDate>
  <parent>CKEditor.WebHome</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <date>1423835523000</date>
  <contentUpdateDate>1423738199000</contentUpdateDate>
  <version>1.1</version>
  <title/>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content/>
  <object>
    <name>CKEditor.WikiSourcePlugin</name>
    <number>0</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>fdd8fa5f-f788-4c7a-8340-c5592faeb5da</guid>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <disabled>0</disabled>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>CKEDITOR.plugins.add('xwiki-source', {
  requires: 'sourcearea,notification',
  init: function(editor) {
    editor.on('beforeSetMode', jQuery.proxy(this.onBeforeSetMode, this));
    editor.on('beforeModeUnload', jQuery.proxy(this.onBeforeModeUnload, this));
    editor.on('mode', jQuery.proxy(this.onMode, this));
  },

  onBeforeSetMode: function(event) {
    if (this.isModeSupported(event.data)) {
      this.setLoading(event.editor, true);
    }
  },

  isModeSupported: function(mode) {
    return mode === 'wysiwyg' || mode === 'source';
  },

  onBeforeModeUnload: function(event) {
    var editor = event.editor;
    if (!this.isModeSupported(editor.mode)) {
      return;
    }
    var mode = editor._.modes[editor.mode];
    if (mode.failed) {
      mode.dirty = mode.failed = false;
      // Make sure we retry the conversion on the next mode switch.
      delete mode.data;
    } else {
      var oldData = mode.data;
      var newData = this.getFullData(editor);
      mode.dirty = oldData !== newData;
      mode.data = newData;
    }
  },

  getFullData: function(editor) {
    var isFullData = editor.config.fullData;
    editor.config.fullData = true;
    var fullData = editor.getData();
    editor.config.fullData = isFullData;
    return fullData;
  },

  onMode: function(event) {
    var editor = event.editor;
    if (editor.mode === 'wysiwyg' &amp;&amp; editor._.previousMode === 'source') {
      // Convert from wiki syntax to HTML.
      this.maybeConvertHTML(editor, true);
    } else if (editor.mode === 'source' &amp;&amp; editor._.previousMode === 'wysiwyg') {
      // Convert from HTML to wiki syntax.
      this.maybeConvertHTML(editor, false);
    } else if (this.isModeSupported(editor.mode)) {
      this.setLoading(editor, false);
    }
  },

  maybeConvertHTML: function(editor, toHTML) {
    var oldMode = editor._.modes[editor._.previousMode];
    var newMode = editor._.modes[editor.mode];
    if (oldMode.dirty || typeof newMode.data !== 'string') {
      this.convertHTML(editor, toHTML);
    } else {
      editor.setData(newMode.data, {
        callback: jQuery.proxy(this.setLoading, this, editor, false)
      });
    }
  },

  convertHTML: function(editor, toHTML) {
    var thisPlugin = this;
    var config = editor.config['xwiki-source'] || {};
    jQuery.post(config.htmlConverter, {
      convert: toHTML,
      text: editor._.previousModeData
    }).done(function(data) {
      editor.setData(data, {
        callback: function() {
          // Take a snapshot after the data has been set, in order to be able to detect changes.
          editor._.modes[editor.mode].data = thisPlugin.getFullData(editor);
          thisPlugin.setLoading(editor, false);
        }
      });
    }).fail(function() {
      // Switch back to the previous edit mode without performing a conversion.
      editor._.modes[editor.mode].failed = true;
      editor.setMode(editor._.previousMode, function() {
        thisPlugin.setLoading(editor, false);
        editor.showNotification('Failed to perform the conversion.', 'warning');
      });
    });
  },

  setLoading: function(editor, loading) {
    var sourceButton, editable = editor.editable();
    if (editable) {
      editor.setReadOnly(loading);
      sourceButton = editor.container.findOne('.cke_button__source_icon');
    }
    if (loading) {
      editor.ui.space('contents').setStyle('visibility', 'hidden');
      sourceButton &amp;&amp; sourceButton.addClass('loading');
      // Disable the switch while the conversion takes place.
      setTimeout(function() {
        editor.getCommand('source').setState(CKEDITOR.TRISTATE_DISABLED);
      }, 0);
    } else {
      editor.ui.space('contents').removeStyle('visibility');
      sourceButton &amp;&amp; sourceButton.removeClass('loading');
      editor.getCommand('source').setState(editor.mode !== 'source' ? CKEDITOR.TRISTATE_OFF : CKEDITOR.TRISTATE_ON);
    }
  }
});</code>
    </property>
    <property>
      <name>Wiki Source Plugin</name>
    </property>
    <property>
      <parse>0</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
</xwikidoc>
